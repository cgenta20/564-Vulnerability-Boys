from threading import Thread
from time import sleep
import socket

HOST = 'localhost'
PORT = 4321

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

server_socket.bind((HOST, PORT))

server_socket.listen()

host_socket = None
host_addr = None

cl_socket = None
cl_addr = None

hostConn = False
clConn = False

try:
    print("New Relay Started")
    while True:
        while not (hostConn and clConn):
            temp_socket, temp_addr = server_socket.accept()
            id = temp_socket.recv(1024).decode()
            if id == "Host" and not hostConn:
                print("Host connection established: ", temp_addr)
                host_socket = temp_socket
                host_addr = temp_addr
                hostConn = True

            elif id == "Client" and not clConn:
                print("Client connection established: ", temp_addr)
                cl_socket = temp_socket
                cl_addr = temp_addr
                clConn = True

            else:
                print("Wrong ID: Connection Refused")
                temp_socket.close()

        ready = "ready".encode()
        host_socket.send(ready)
        cl_socket.send(ready)

        while hostConn and clConn:
            try:
                message = host_socket.recv(1024)
            except:
                print("Host Connection Closed")
                hostConn = False
                break

            if ( len(message) == 0 ):
                print("Host Connection Closed")
                hostConn = False
                break

            print("Message relayed: ", message)

            try:
                sent = cl_socket.send(message)
                status = cl_socket.recv(1024).decode()
            except:
                print("Client Connection Closed")
                host_socket.send("bad".encode())
                clConn = False
                break
            
            if ( len(status) == 0 ):
                print("Client Connection Closed")
                host_socket.send("bad".encode())
                clConn = False
            else:
                host_socket.send("good".encode())
            

except KeyboardInterrupt:
    pass

server_socket.close()